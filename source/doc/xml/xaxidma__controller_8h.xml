<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="es">
  <compounddef id="xaxidma__controller_8h" kind="file" language="C++">
    <compoundname>xaxidma_controller.h</compoundname>
    <includes local="yes">xaxidma.h</includes>
    <includes local="yes">xparameters.h</includes>
    <includes local="yes">xil_exception.h</includes>
    <includes local="yes">xdebug.h</includes>
    <includes refid="tcp__com_8h" local="yes">tcp_com.h</includes>
    <includes refid="gpio__handler_8h" local="yes">gpio_handler.h</includes>
    <includes local="yes">xscugic.h</includes>
    <includedby refid="main_8h" local="yes">base_code/MB40ch_wUART/src/main.h</includedby>
    <includedby refid="xaxidma__controller_8c" local="yes">base_code/MB40ch_wUART/src/xaxidma_controller.c</includedby>
    <incdepgraph>
      <node id="14">
        <label>gpio_handler.h</label>
        <link refid="gpio__handler_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>platform.h</label>
        <link refid="platform_8h_source"/>
      </node>
      <node id="12">
        <label>platform_config.h</label>
        <link refid="platform__config_8h_source"/>
      </node>
      <node id="6">
        <label>tcp_com.h</label>
        <link refid="tcp__com_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>base_code/MB40ch_wUART/src/xaxidma_controller.h</label>
        <link refid="xaxidma__controller_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lwip/tcp.h</label>
      </node>
      <node id="10">
        <label>netif/xadapter.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>xaxidma.h</label>
      </node>
      <node id="5">
        <label>xdebug.h</label>
      </node>
      <node id="18">
        <label>xgpio.h</label>
      </node>
      <node id="8">
        <label>xil_cache.h</label>
      </node>
      <node id="4">
        <label>xil_exception.h</label>
      </node>
      <node id="17">
        <label>xil_io.h</label>
      </node>
      <node id="13">
        <label>xil_printf.h</label>
      </node>
      <node id="15">
        <label>xil_types.h</label>
      </node>
      <node id="3">
        <label>xparameters.h</label>
      </node>
      <node id="19">
        <label>xscugic.h</label>
      </node>
      <node id="16">
        <label>xstatus.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>base_code/MB40ch_wUART/src/main.h</label>
        <link refid="main_8h_source"/>
      </node>
      <node id="1">
        <label>base_code/MB40ch_wUART/src/xaxidma_controller.h</label>
        <link refid="xaxidma__controller_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="xaxidma__controller_8h_1ac6ec5bfec1d732682c68fddba1493883" prot="public" static="no">
        <name>DMA_DEV_ID</name>
        <initializer>XPAR_AXIDMA_0_DEVICE_ID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="41" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a4f2d87307e70466c4fae03a069fe9195" prot="public" static="no">
        <name>MEM_BASE_ADDR</name>
        <initializer>0x01000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="56" column="10" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1af75e1e9c876ef6424b065d68425ef19d" prot="public" static="no">
        <name>RX_INTR_ID</name>
        <initializer>XPAR_FABRIC_AXIDMA_0_S2MM_INTROUT_VEC_ID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="65" column="10" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1ac5652fc289e0dcfc7200f47395b4536a" prot="public" static="no">
        <name>TX_INTR_ID</name>
        <initializer>XPAR_FABRIC_AXIDMA_0_MM2S_INTROUT_VEC_ID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="66" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a5f4b38298cc7e97a070bfc199c3d025c" prot="public" static="no">
        <name>RX_BD_SPACE_BASE</name>
        <initializer>(MEM_BASE_ADDR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="69" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a2648de6386a940bec3e6fa851a6ddc3b" prot="public" static="no">
        <name>RX_BD_SPACE_HIGH</name>
        <initializer>(MEM_BASE_ADDR + 0x0000FFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="70" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1ac042cf56128e2d79e25efaa77e1cbeba" prot="public" static="no">
        <name>TX_BD_SPACE_BASE</name>
        <initializer>(MEM_BASE_ADDR + 0x00010000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="71" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a06bc15184ce5e6708777e34bde5d9610" prot="public" static="no">
        <name>TX_BD_SPACE_HIGH</name>
        <initializer>(MEM_BASE_ADDR + 0x0001FFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="72" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a21c7ab0233ec781d5ed4bd61bcc27ad6" prot="public" static="no">
        <name>TX_BUFFER_BASE</name>
        <initializer>(MEM_BASE_ADDR + 0x00100000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="73" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1abd40075f9ebd69d344db57858e63a744" prot="public" static="no">
        <name>RX_BUFFER_BASE</name>
        <initializer>(MEM_BASE_ADDR + 0x00300000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="74" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1ab6edc88e5140241a95184cc6f926b734" prot="public" static="no">
        <name>RX_BUFFER_HIGH</name>
        <initializer>(MEM_BASE_ADDR + 0x104FFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="75" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a90bc74590962865fc1ab7ee1be0f4b64" prot="public" static="no">
        <name>INTC_DEVICE_ID</name>
        <initializer>XPAR_SCUGIC_SINGLE_DEVICE_ID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="80" column="10" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a4152919e50ca8a7f89d0c981eabd0593" prot="public" static="no">
        <name>RESET_TIMEOUT_COUNTER</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="85" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1aa2cbdec5743bbebc99afa6729c5b98f1" prot="public" static="no">
        <name>MAX_PKT_LEN</name>
        <initializer>0x0F230</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="90" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a3d3d08ac7e14972de42a210ee15b7216" prot="public" static="no">
        <name>MARK_UNCACHEABLE</name>
        <initializer>0x701</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="91" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1af0709e32aed9c2104734aa9e5761590c" prot="public" static="no">
        <name>MAX_STORED_EVENTS</name>
        <initializer>0x1F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="92" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a4c850c92fe393b5099dcf0cefe24173e" prot="public" static="no">
        <name>NUMBER_OF_BDS_PER_PKT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="98" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a014a3adba0cfa2dc2faced4a68114fbe" prot="public" static="no">
        <name>NUMBER_OF_PKTS_TO_TRANSFER</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="99" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1ad145c274adf210cacf11db6de650c93d" prot="public" static="no">
        <name>NUMBER_OF_BDS_TO_TRANSFER</name>
        <initializer>						(NUMBER_OF_PKTS_TO_TRANSFER * \
						NUMBER_OF_BDS_PER_PKT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="100" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="100" bodyend="101"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1aca7eb78ffe9c1c90d6aadffd9c832501" prot="public" static="no">
        <name>COALESCING_COUNT</name>
        <initializer>NUMBER_OF_PKTS_TO_TRANSFER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="109" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a2e4ace81a47e8546df7b794320761272" prot="public" static="no">
        <name>DELAY_TIMER_COUNT</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="110" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1acbad0bcec47edfd40d1ca213be24408d" prot="public" static="no">
        <name>INTC</name>
        <initializer>XScuGic</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="116" column="11" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xaxidma__controller_8h_1a1774a555f3fbdee1c1a31fd1dfda655d" prot="public" static="no">
        <name>INTC_HANDLER</name>
        <initializer>XScuGic_InterruptHandler</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="117" column="10" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="117" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="xaxidma__controller_8h_1a19e117de53f70f4391bf2e1d876a1af5" prot="public" static="no" mutable="no">
        <type>XAxiDma</type>
        <definition>XAxiDma AxiDma</definition>
        <argsstring></argsstring>
        <name>AxiDma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="154" column="9" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1a7e3a639e570fded599c3950439c4ba2f" prot="public" static="yes" mutable="no">
        <type>INTC</type>
        <definition>INTC Intc</definition>
        <argsstring></argsstring>
        <name>Intc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="157" column="13" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1aa7595dc18d0b6aaa09016a6db3ddc83b" prot="public" static="no" mutable="no">
        <type>volatile int</type>
        <definition>volatile int TxDone</definition>
        <argsstring></argsstring>
        <name>TxDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="162" column="14" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1af7b197147bd2d018fd8df5bbd3aed7a7" prot="public" static="no" mutable="no">
        <type>volatile int</type>
        <definition>volatile int RxDone</definition>
        <argsstring></argsstring>
        <name>RxDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="163" column="14" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1a0b12f25a7314aa1e5c2847df101fb54f" prot="public" static="no" mutable="no">
        <type>volatile int</type>
        <definition>volatile int Error</definition>
        <argsstring></argsstring>
        <name>Error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="164" column="14" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1ab6b7f6bfa7fd9510f4b6e50e157b878d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int c_glob_ev</definition>
        <argsstring></argsstring>
        <name>c_glob_ev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="165" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1a34fe58f36275178124b9695ad8dddd73" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int start_send_event</definition>
        <argsstring></argsstring>
        <name>start_send_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="166" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1a6f5238f0e85b26afe61a79f1ca8d8435" prot="public" static="yes" mutable="no">
        <type>u32 *</type>
        <definition>u32* Packet</definition>
        <argsstring></argsstring>
        <name>Packet</name>
        <initializer>= (u32 *) TX_BUFFER_BASE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="170" column="12" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1a5a790b8c158dcec4a1e38a9cbb243501" prot="public" static="yes" mutable="no">
        <type>u8 *</type>
        <definition>u8* read_pointer</definition>
        <argsstring></argsstring>
        <name>read_pointer</name>
        <initializer>= (u8 *) RX_BUFFER_BASE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="173" column="11" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xaxidma__controller_8h_1aa5e9c7bbd80ce6cd69be345bf6fb4e43" prot="public" static="no" mutable="no">
        <type>volatile int</type>
        <definition>volatile int n_events</definition>
        <argsstring></argsstring>
        <name>n_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="176" column="14" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" bodystart="176" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="xaxidma__controller_8h_1ad29568bf33fe85cabeb0615ae8ebc67b" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xil_printf</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>xil_printf</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="27" column="13" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="27" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a244c02d1a957da140c5273bee4a01cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CheckData</definition>
        <argsstring>(int Length, u8 StartValue)</argsstring>
        <name>CheckData</name>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>StartValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="131" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="263" bodyend="290" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1afa5bdb508415a6cc4d9ef0411de10d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TxCallBack</definition>
        <argsstring>(XAxiDma_BdRing *TxRingPtr)</argsstring>
        <name>TxCallBack</name>
        <param>
          <type>XAxiDma_BdRing *</type>
          <declname>TxRingPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="132" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="305" bodyend="354" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a4f411d53a8c6984cb6209fa8fbb81859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TxIntrHandler</definition>
        <argsstring>(void *Callback)</argsstring>
        <name>TxIntrHandler</name>
        <param>
          <type>void *</type>
          <declname>Callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="133" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="372" bodyend="427" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1ae914239bfa80d08ef4d19de0df38cff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RxCallBack</definition>
        <argsstring>(XAxiDma_BdRing *RxRingPtr)</argsstring>
        <name>RxCallBack</name>
        <param>
          <type>XAxiDma_BdRing *</type>
          <declname>RxRingPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="134" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="601" bodyend="612" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a91633c2fb06c128e8181eb2e5364d524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RxIntrHandler</definition>
        <argsstring>(void *Callback)</argsstring>
        <name>RxIntrHandler</name>
        <param>
          <type>void *</type>
          <declname>Callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="135" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="629" bodyend="684" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="135" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a7190e070499a829289bdb8de7174a7f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void process_n_send_data</definition>
        <argsstring>(int cont, int max_counts)</argsstring>
        <name>process_n_send_data</name>
        <param>
          <type>int</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Verifies DMA completed data transfer</para>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="136" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="477" bodyend="577" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1ad7e0504080579c51b723afadb77d6d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cleanup_buffer</definition>
        <argsstring>()</argsstring>
        <name>cleanup_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="137" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="578" bodyend="598" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="137" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a447efb52bdea94d5d9cfe0d53a27190d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setup_DMA</definition>
        <argsstring>(void)</argsstring>
        <name>setup_DMA</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Main function</para>
<para>This function is the main entry of the interrupt test. It does the following:<itemizedlist>
<listitem><para>Set up the output terminal if UART16550 is in the hardware build</para>
</listitem><listitem><para>Initialize the DMA engine</para>
</listitem><listitem><para>Set up Tx and Rx channels</para>
</listitem><listitem><para>Set up the interrupt system for the Tx and Rx interrupts</para>
</listitem><listitem><para>Submit a transfer</para>
</listitem><listitem><para>Wait for the transfer to finish</para>
</listitem><listitem><para>Check transfer status</para>
</listitem><listitem><para>Disable Tx and Rx interrupts</para>
</listitem><listitem><para>Print test status and exit</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>XST_SUCCESS if tests pass</para>
</listitem><listitem><para>XST_FAILURE if fails.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="139" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="118" bodyend="180" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="139" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a5249d0c78797c780baf88c91003c8c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SetupIntrSystem</definition>
        <argsstring>(INTC *IntcInstancePtr, XAxiDma *AxiDmasPtr, u16 TxIntrId, u16 RxIntrId)</argsstring>
        <name>SetupIntrSystem</name>
        <param>
          <type>INTC *</type>
          <declname>IntcInstancePtr</declname>
        </param>
        <param>
          <type>XAxiDma *</type>
          <declname>AxiDmasPtr</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>TxIntrId</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>RxIntrId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="141" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="705" bodyend="768" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="141" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a91e13835ea870fd2d1d20372c67f530f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisableIntrSystem</definition>
        <argsstring>(INTC *IntcInstancePtr, u16 TxIntrId, u16 RxIntrId)</argsstring>
        <name>DisableIntrSystem</name>
        <param>
          <type>INTC *</type>
          <declname>IntcInstancePtr</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>TxIntrId</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>RxIntrId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function disables the interrupts for DMA engine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>IntcInstancePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the pointer to the INTC component instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TxIntrId</parametername>
</parameternamelist>
<parameterdescription>
<para>is interrupt ID associated w/ DMA TX channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RxIntrId</parametername>
</parameternamelist>
<parameterdescription>
<para>is interrupt ID associated w/ DMA RX channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para>
</simplesect>
<simplesect kind="note"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="143" column="6" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="784" bodyend="795" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1afb21950998d5a2d19678dbf5aa69cccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RxSetup</definition>
        <argsstring>(XAxiDma *AxiDmaInstPtr)</argsstring>
        <name>RxSetup</name>
        <param>
          <type>XAxiDma *</type>
          <declname>AxiDmaInstPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="146" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="811" bodyend="926" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="146" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a7febbc91fe1841cdaae28ccd7fe54539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TxSetup</definition>
        <argsstring>(XAxiDma *AxiDmaInstPtr)</argsstring>
        <name>TxSetup</name>
        <param>
          <type>XAxiDma *</type>
          <declname>AxiDmaInstPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="147" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="942" bodyend="1005" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="147" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="xaxidma__controller_8h_1a91c37f645b66ea665e6c4a59d7af1a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SendPacket</definition>
        <argsstring>(XAxiDma *AxiDmaInstPtr)</argsstring>
        <name>SendPacket</name>
        <param>
          <type>XAxiDma *</type>
          <declname>AxiDmaInstPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h" line="148" column="5" bodyfile="base_code/MB40ch_wUART/src/xaxidma_controller.c" bodystart="1021" bodyend="1156" declfile="base_code/MB40ch_wUART/src/xaxidma_controller.h" declline="148" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>xaxidma_controller.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Feb<sp/>1,<sp/>2021</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Rimsky</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_XAXIDMA_CONTROLLER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRC_XAXIDMA_CONTROLLER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xaxidma.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xparameters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xil_exception.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xdebug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tcp_com.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gpio_handler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__aarch64__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xil_mmu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_UARTNS550_0_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xuartns550_l.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>use<sp/>uartns550<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>xil_printf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_INTC_0_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;xintc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;xscugic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>Constant<sp/>Definitions<sp/>**********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Device<sp/>hardware<sp/>build<sp/>related<sp/>constants.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DMA_DEV_ID<sp/><sp/><sp/><sp/><sp/><sp/>XPAR_AXIDMA_0_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_AXI_7SDDR_0_S_AXI_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DDR_BASE_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XPAR_AXI_7SDDR_0_S_AXI_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>XPAR_MIG7SERIES_0_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DDR_BASE_ADDR<sp/><sp/><sp/>XPAR_MIG7SERIES_0_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>XPAR_MIG_0_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DDR_BASE_ADDR<sp/><sp/><sp/>XPAR_MIG_0_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>XPAR_PSU_DDR_0_S_AXI_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DDR_BASE_ADDR<sp/><sp/><sp/>XPAR_PSU_DDR_0_S_AXI_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DDR_BASE_ADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>CHECK<sp/>FOR<sp/>THE<sp/>VALID<sp/>DDR<sp/>ADDRESS<sp/>IN<sp/>XPARAMETERS.H,<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEFAULT<sp/>SET<sp/>TO<sp/>0x01000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEM_BASE_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEM_BASE_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DDR_BASE_ADDR<sp/>+<sp/>0x1000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_INTC_0_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_INTR_ID<sp/><sp/><sp/><sp/><sp/><sp/>XPAR_INTC_0_AXIDMA_0_S2MM_INTROUT_VEC_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INTR_ID<sp/><sp/><sp/><sp/><sp/><sp/>XPAR_INTC_0_AXIDMA_0_MM2S_INTROUT_VEC_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_INTR_ID<sp/><sp/><sp/><sp/><sp/><sp/>XPAR_FABRIC_AXIDMA_0_S2MM_INTROUT_VEC_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_INTR_ID<sp/><sp/><sp/><sp/><sp/><sp/>XPAR_FABRIC_AXIDMA_0_MM2S_INTROUT_VEC_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_BD_SPACE_BASE<sp/><sp/><sp/><sp/>(MEM_BASE_ADDR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_BD_SPACE_HIGH<sp/><sp/><sp/><sp/>(MEM_BASE_ADDR<sp/>+<sp/>0x0000FFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_BD_SPACE_BASE<sp/><sp/><sp/><sp/>(MEM_BASE_ADDR<sp/>+<sp/>0x00010000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_BD_SPACE_HIGH<sp/><sp/><sp/><sp/>(MEM_BASE_ADDR<sp/>+<sp/>0x0001FFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_BUFFER_BASE<sp/><sp/><sp/><sp/><sp/><sp/>(MEM_BASE_ADDR<sp/>+<sp/>0x00100000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_BUFFER_BASE<sp/><sp/><sp/><sp/><sp/><sp/>(MEM_BASE_ADDR<sp/>+<sp/>0x00300000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_BUFFER_HIGH<sp/><sp/><sp/><sp/><sp/><sp/>(MEM_BASE_ADDR<sp/>+<sp/>0x104FFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_INTC_0_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTC_DEVICE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XPAR_INTC_0_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTC_DEVICE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XPAR_SCUGIC_SINGLE_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Timeout<sp/>loop<sp/>counter<sp/>for<sp/>reset</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_TIMEOUT_COUNTER<sp/><sp/><sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Buffer<sp/>and<sp/>Buffer<sp/>Descriptor<sp/>related<sp/>constant<sp/>definition</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PKT_LEN<sp/><sp/><sp/><sp/><sp/>0x0F230</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARK_UNCACHEABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x701</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_STORED_EVENTS<sp/><sp/><sp/>0x1F<sp/></highlight><highlight class="comment">//<sp/>(RX_BUFFER_HIGH<sp/>-<sp/>RX_BUFFER_BASE)<sp/>/<sp/>MAX_PKT_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>Number<sp/>of<sp/>BDs<sp/>in<sp/>the<sp/>transfer<sp/>example</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>We<sp/>show<sp/>how<sp/>to<sp/>submit<sp/>multiple<sp/>BDs<sp/>for<sp/>one<sp/>transmit.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>The<sp/>receive<sp/>side<sp/>gets<sp/>one<sp/>completion<sp/>per<sp/>transfer.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMBER_OF_BDS_PER_PKT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMBER_OF_PKTS_TO_TRANSFER<sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMBER_OF_BDS_TO_TRANSFER<sp/><sp/><sp/>(NUMBER_OF_PKTS_TO_TRANSFER<sp/>*<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUMBER_OF_BDS_PER_PKT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>interrupt<sp/>coalescing<sp/>threshold<sp/>and<sp/>delay<sp/>timer<sp/>threshold</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Valid<sp/>range<sp/>is<sp/>1<sp/>to<sp/>255</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>We<sp/>set<sp/>the<sp/>coalescing<sp/>threshold<sp/>to<sp/>be<sp/>the<sp/>total<sp/>number<sp/>of<sp/>packets.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>The<sp/>receive<sp/>side<sp/>will<sp/>only<sp/>get<sp/>one<sp/>completion<sp/>interrupt<sp/>for<sp/>this<sp/>example.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COALESCING_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUMBER_OF_PKTS_TO_TRANSFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELAY_TIMER_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_INTC_0_DEVICE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>INTC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XIntc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>INTC_HANDLER<sp/><sp/><sp/>XIntc_InterruptHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>INTC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XScuGic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>INTC_HANDLER<sp/><sp/><sp/>XScuGic_InterruptHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/****************************<sp/>Type<sp/>Definitions<sp/>*******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*****************<sp/>Macros<sp/>(Inline<sp/>Functions)<sp/>Definitions<sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/**************************<sp/>Function<sp/>Prototypes<sp/>******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XPAR_UARTNS550_0_BASEADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Uart550_Setup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CheckData(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length,<sp/>u8<sp/>StartValue);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TxCallBack(XAxiDma_BdRing<sp/>*<sp/>TxRingPtr);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TxIntrHandler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Callback);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RxCallBack(XAxiDma_BdRing<sp/>*<sp/>RxRingPtr);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RxIntrHandler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Callback);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_n_send_data(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cont,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_counts);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup_buffer();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setup_DMA(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SetupIntrSystem(INTC<sp/>*<sp/>IntcInstancePtr,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAxiDma<sp/>*<sp/>AxiDmasPtr,<sp/>u16<sp/>TxIntrId,<sp/>u16<sp/>RxIntrId);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisableIntrSystem(INTC<sp/>*<sp/>IntcInstancePtr,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u16<sp/>TxIntrId,<sp/>u16<sp/>RxIntrId);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RxSetup(XAxiDma<sp/>*<sp/>AxiDmaInstPtr);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TxSetup(XAxiDma<sp/>*<sp/>AxiDmaInstPtr);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SendPacket(XAxiDma<sp/>*<sp/>AxiDmaInstPtr);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/**************************<sp/>Variable<sp/>Definitions<sp/>*****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Device<sp/>instance<sp/>definitions</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">XAxiDma<sp/>AxiDma;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>INTC<sp/>Intc;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Instance<sp/>of<sp/>the<sp/>Interrupt<sp/>Controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>Flags<sp/>interrupt<sp/>handlers<sp/>use<sp/>to<sp/>notify<sp/>the<sp/>application<sp/>context<sp/>the<sp/>events.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TxDone;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RxDone;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Error;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_glob_ev;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_send_event;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>Buffer<sp/>for<sp/>transmit<sp/>packet.<sp/>Must<sp/>be<sp/>32-bit<sp/>aligned<sp/>to<sp/>be<sp/>used<sp/>by<sp/>DMA.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u32<sp/>*Packet<sp/>=<sp/>(u32<sp/>*)<sp/>TX_BUFFER_BASE;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>the<sp/>address<sp/>being<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u8<sp/>*read_pointer<sp/>=<sp/>(u8<sp/>*)<sp/>RX_BUFFER_BASE;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//n_events_to<sp/>acquire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_events<sp/>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SRC_XAXIDMA_CONTROLLER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="base_code/MB40ch_wUART/src/xaxidma_controller.h"/>
  </compounddef>
</doxygen>
