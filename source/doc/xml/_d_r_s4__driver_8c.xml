<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="es">
  <compounddef id="_d_r_s4__driver_8c" kind="file" language="C++">
    <compoundname>DRS4_driver.c</compoundname>
    <includes refid="_d_r_s4__driver_8h" local="yes">DRS4_driver.h</includes>
    <incdepgraph>
      <node id="1">
        <label>base_code/MB40ch_wUART/src/DRS4_driver.c</label>
        <link refid="_d_r_s4__driver_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>DRS4_driver.h</label>
        <link refid="_d_r_s4__driver_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sleep.h</label>
      </node>
      <node id="6">
        <label>xil_io.h</label>
      </node>
      <node id="4">
        <label>xil_types.h</label>
      </node>
      <node id="5">
        <label>xstatus.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1aea191e67b6639ebdcd9d00890745f8c7" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 ctrl_sig</definition>
        <argsstring></argsstring>
        <name>ctrl_sig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="10" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a044d4a533ae7b6e6cc42bc36bbd8f389" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 register_signals</definition>
        <argsstring></argsstring>
        <name>register_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="10" column="13" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a4ca46ffd8087bbbf67d833f943ffd38d" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 SR_init</definition>
        <argsstring></argsstring>
        <name>SR_init</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="11" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a31bff2e70a3eb9aa619021e0966059e1" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 Conf_reg_init</definition>
        <argsstring></argsstring>
        <name>Conf_reg_init</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="12" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1aa2e9a3a3ce7a711d2adce005d7a03d1e" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 ROI</definition>
        <argsstring></argsstring>
        <name>ROI</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="13" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1ab046bab82fa928cfc4e960437c81a3a5" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 Full_read</definition>
        <argsstring></argsstring>
        <name>Full_read</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="14" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a4bfaa2dcbabaf8d9833dac780806cc8a" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 refclk_counter</definition>
        <argsstring></argsstring>
        <name>refclk_counter</name>
        <initializer>= 24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="15" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1afe71ebd52ef3d9da4ee95e146c1a8b4b" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 readout_cells</definition>
        <argsstring></argsstring>
        <name>readout_cells</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="16" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1acc6e5ceb306312469fa28b720165e362" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 conf_bits</definition>
        <argsstring></argsstring>
        <name>conf_bits</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="17" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a529e290e544495d6124f5dd5ec21478e" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 delay_trig</definition>
        <argsstring></argsstring>
        <name>delay_trig</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="18" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a99e50660a4a11c4868d98915e08f905a" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 axi_rst</definition>
        <argsstring></argsstring>
        <name>axi_rst</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="19" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a5b5d083aab0319a8d07f57b278c65d55" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 states_vector</definition>
        <argsstring></argsstring>
        <name>states_vector</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="20" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a236fdd2a9b0dba25719f000d5848027a" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 stop_cell</definition>
        <argsstring></argsstring>
        <name>stop_cell</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="21" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a11c8749f166d5b7fd26d50d518788c35" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 ROFS</definition>
        <argsstring></argsstring>
        <name>ROFS</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="22" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a6ae4542e81054e76bf03d501618eb102" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 nReset</definition>
        <argsstring></argsstring>
        <name>nReset</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="23" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1af246b3fabc145e5c8c9d2b7ed1ebfca8" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 state1</definition>
        <argsstring></argsstring>
        <name>state1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="25" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a60cff25ad9a51049c69a11f8be27be64" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 state2</definition>
        <argsstring></argsstring>
        <name>state2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="25" column="12" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1ab17029634fe412894c41fd46e8509e17" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 state3</definition>
        <argsstring></argsstring>
        <name>state3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="25" column="19" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_s4__driver_8c_1a5af6ee202d58a43673c00b4893a6bfc1" prot="public" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 state4</definition>
        <argsstring></argsstring>
        <name>state4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="25" column="26" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a8e2b022030e19b8a667ef4f2bc05e924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DRS4_Init</definition>
        <argsstring>()</argsstring>
        <name>DRS4_Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="28" column="6" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="28" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1acf73616c2fdc209fa47a0ff88e261aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DRS4_config</definition>
        <argsstring>()</argsstring>
        <name>DRS4_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="44" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="44" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a5b843d8517ff28c606824f45c92308e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DRS4_start_ROI</definition>
        <argsstring>()</argsstring>
        <name>DRS4_start_ROI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="68" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="68" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a7c515e750acb8a258cc5388501944f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DRS4_start_FullRO</definition>
        <argsstring>()</argsstring>
        <name>DRS4_start_FullRO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="81" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1aa9dfbeec906e3dbfc135aee1dd35343b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DRS4_Safe_shutdown</definition>
        <argsstring>()</argsstring>
        <name>DRS4_Safe_shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="95" column="6" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="95" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a6dd97ba9d02aa85ff3a963ff0fba3fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 DRS4_ctrl_signal</definition>
        <argsstring>()</argsstring>
        <name>DRS4_ctrl_signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="112" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="112" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1ad7d665e222124d39684f650ba950d18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 DRS4_register_signal</definition>
        <argsstring>()</argsstring>
        <name>DRS4_register_signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="129" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="129" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a374102208caee5c5f4c7279825d1c139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_DRS4_control_signals</definition>
        <argsstring>()</argsstring>
        <name>write_DRS4_control_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="147" column="6" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a773a217633920942ad269009c326b383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_DRS4_register_signals</definition>
        <argsstring>()</argsstring>
        <name>write_DRS4_register_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="154" column="6" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a87cbc9152b76639570cd70ecfd1116fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 get_states_machine</definition>
        <argsstring>()</argsstring>
        <name>get_states_machine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="159" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_s4__driver_8c_1a148a807abd07446484d002c1df919a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 get_stop_cell_SROUT</definition>
        <argsstring>()</argsstring>
        <name>get_stop_cell_SROUT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/DRS4_driver.c" line="165" column="5" bodyfile="base_code/MB40ch_wUART/src/DRS4_driver.c" bodystart="165" bodyend="170"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>DRS4_driver.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Apr<sp/>22,<sp/>2020</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Rimsky</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DRS4_driver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">u32<sp/>ctrl_sig,register_signals;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">u32<sp/>SR_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">u32<sp/>Conf_reg_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">u32<sp/>ROI<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">u32<sp/>Full_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">u32<sp/>refclk_counter<sp/>=<sp/>24;<sp/></highlight><highlight class="comment">//Formula<sp/>is<sp/>(DRS4_CLK*1024/GSPS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">u32<sp/>readout_cells<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">u32<sp/>conf_bits<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">u32<sp/>delay_trig<sp/>=<sp/>30;<sp/></highlight><highlight class="comment">//must<sp/>be<sp/>always<sp/>greater<sp/>than<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">u32<sp/>axi_rst<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">u32<sp/>states_vector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">u32<sp/>stop_cell<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">u32<sp/>ROFS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">u32<sp/>nReset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">u32<sp/>state1,<sp/>state2,<sp/>state3,<sp/>state4;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DRS4_Init<sp/>(){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>axi_rst<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>DRS_start_adq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>nReset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>SR_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>Conf_reg_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ROI<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Full_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>axi_rst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>nReset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep<sp/>(10);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRS4_config<sp/>(){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_register_signals();<sp/></highlight><highlight class="comment">//<sp/>VERY<sp/>IMPORTANT!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>SR_init<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(110);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>get_states_machine();<sp/></highlight><highlight class="comment">//empirically<sp/>here<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/>2){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xil_printf(</highlight><highlight class="stringliteral">&quot;#ERROR#:<sp/>failed<sp/>SR_init\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>SR_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Conf_reg_init<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(50);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>get_states_machine();<sp/></highlight><highlight class="comment">//empirically<sp/>here<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/>5){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xil_printf(</highlight><highlight class="stringliteral">&quot;#ERROR#:<sp/>failed<sp/>Conf_reg_init\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Conf_reg_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRS4_start_ROI(){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ROI<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();<sp/></highlight><highlight class="comment">//empirically<sp/>here<sp/>is<sp/>ready<sp/>few<sp/>clocks<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>get_states_machine();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/>6){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xil_printf(</highlight><highlight class="stringliteral">&quot;#ERROR#:<sp/>failed<sp/>to<sp/>star<sp/>ROI:<sp/>current<sp/>state<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>state);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>ROI<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRS4_start_FullRO(){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Full_read<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();<sp/></highlight><highlight class="comment">//empirically<sp/>here<sp/>is<sp/>ready<sp/>few<sp/>clocks<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>get_states_machine();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/>21){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xil_printf(</highlight><highlight class="stringliteral">&quot;#ERROR#:<sp/>failed<sp/>to<sp/>star<sp/>FullRO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Full_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DRS4_Safe_shutdown<sp/>(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>axi_rst<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>nReset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>SR_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Conf_reg_init<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ROI<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Full_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>nReset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>write_DRS4_control_signals();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>axi_rst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>nReset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>xil_printf(</highlight><highlight class="stringliteral">&quot;DRS4<sp/>shutdown<sp/>complete\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">u32<sp/>DRS4_ctrl_signal<sp/>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>ctrl_signal;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>mask<sp/>=<sp/>0x00000001;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>nReset<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((SR_init<sp/><sp/>&lt;&lt;<sp/>1)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>1));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((Conf_reg_init<sp/>&lt;&lt;<sp/>2)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((ROI<sp/><sp/>&lt;&lt;<sp/><sp/>3)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>3));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((Full_read<sp/><sp/>&lt;&lt;<sp/>4)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>4));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((axi_rst<sp/><sp/>&lt;&lt;<sp/>5)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>5));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((ROFS<sp/><sp/>&lt;&lt;<sp/>6)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>6));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/>ctrl_signal<sp/>|<sp/>((DRS_start_adq<sp/><sp/>&lt;&lt;<sp/>7)<sp/>&amp;<sp/>(mask<sp/>&lt;&lt;<sp/>7));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl_signal;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">u32<sp/>DRS4_register_signal()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>mask_refclk<sp/>=<sp/>0x0000007F;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>mask_readout_cells<sp/>=<sp/>0x000FFF80;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>mask_config_bits<sp/>=<sp/>0x00700000;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>mask_trigger_delay<sp/>=<sp/>0x7F800000;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>register_signal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>register_signal<sp/>=<sp/>refclk_counter<sp/>&amp;<sp/>mask_refclk;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>register_signal<sp/>=<sp/>register_signal<sp/>|<sp/>((readout_cells&lt;&lt;7)<sp/>&amp;<sp/>mask_readout_cells);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>register_signal<sp/>=<sp/>register_signal<sp/>|<sp/>((conf_bits&lt;&lt;20)<sp/>&amp;<sp/>mask_config_bits);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>register_signal<sp/>=<sp/>register_signal<sp/>|<sp/>((delay_trig&lt;&lt;23)<sp/>&amp;<sp/>mask_trigger_delay);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>register_signal;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_DRS4_control_signals()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_sig<sp/>=<sp/>DRS4_ctrl_signal();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>Xil_Out32(DRS4_base_addr+DRS4_ctrl_signals,ctrl_sig);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_DRS4_register_signals()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>register_signals<sp/>=<sp/>DRS4_register_signal();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Xil_Out32(DRS4_base_addr+DRS4_register_signals,register_signals);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">u32<sp/>get_states_machine()</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>states;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>states<sp/>=<sp/>Xil_In32(DRS4_base_addr+DRS4_read_signals)<sp/>&amp;<sp/>0x0000001f;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(states);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">u32<sp/>get_stop_cell_SROUT()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>stop_cell;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>stop_cell<sp/>=<sp/>(Xil_In32(DRS4_base_addr+DRS4_read_signals)<sp/>&gt;&gt;<sp/>5<sp/>)<sp/>&amp;<sp/>0x0003ff;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stop_cell);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="base_code/MB40ch_wUART/src/DRS4_driver.c"/>
  </compounddef>
</doxygen>
