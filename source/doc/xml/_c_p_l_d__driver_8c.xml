<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="es">
  <compounddef id="_c_p_l_d__driver_8c" kind="file" language="C++">
    <compoundname>CPLD_driver.c</compoundname>
    <includes refid="_c_p_l_d__driver_8h" local="yes">CPLD_driver.h</includes>
    <incdepgraph>
      <node id="1">
        <label>base_code/MB40ch_wUART/src/CPLD_driver.c</label>
        <link refid="_c_p_l_d__driver_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CPLD_driver.h</label>
        <link refid="_c_p_l_d__driver_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sleep.h</label>
      </node>
      <node id="6">
        <label>xil_io.h</label>
      </node>
      <node id="4">
        <label>xil_types.h</label>
      </node>
      <node id="5">
        <label>xstatus.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_c_p_l_d__driver_8c_1afb7fd43b26f9058214f1cb1059da76a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 write_CPLD_signals</definition>
        <argsstring>()</argsstring>
        <name>write_CPLD_signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/CPLD_driver.c" line="28" column="5" bodyfile="base_code/MB40ch_wUART/src/CPLD_driver.c" bodystart="28" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="_c_p_l_d__driver_8c_1afe4012ac5ef829b5e9793abde9aca870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 read_CPLD_status</definition>
        <argsstring>()</argsstring>
        <name>read_CPLD_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/CPLD_driver.c" line="95" column="4" bodyfile="base_code/MB40ch_wUART/src/CPLD_driver.c" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="_c_p_l_d__driver_8c_1a4dec39c495dd54a4f60eb23950553fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 read_cpld_word</definition>
        <argsstring>()</argsstring>
        <name>read_cpld_word</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/CPLD_driver.c" line="102" column="5" bodyfile="base_code/MB40ch_wUART/src/CPLD_driver.c" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_c_p_l_d__driver_8c_1a97350d0f7c01dbe4a01d5470d7db4c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Mezz_CPLD_init</definition>
        <argsstring>(u8 mezz_sel)</argsstring>
        <name>Mezz_CPLD_init</name>
        <param>
          <type>u8</type>
          <declname>mezz_sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/CPLD_driver.c" line="112" column="6" bodyfile="base_code/MB40ch_wUART/src/CPLD_driver.c" bodystart="112" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="_c_p_l_d__driver_8c_1a748b84a3d63b13cba2a4e665ea19e2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CPLD_mezz_power_off</definition>
        <argsstring>(u8 mezz_sel)</argsstring>
        <name>CPLD_mezz_power_off</name>
        <param>
          <type>u8</type>
          <declname>mezz_sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base_code/MB40ch_wUART/src/CPLD_driver.c" line="158" column="6" bodyfile="base_code/MB40ch_wUART/src/CPLD_driver.c" bodystart="158" bodyend="177"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>CPLD_driver.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>07-07-2023</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>victor</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CPLD_driver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Driver<sp/>file<sp/>to<sp/>control<sp/>ipcore<sp/>of<sp/>CPLD<sp/>of<sp/>CMB40</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>It<sp/>will<sp/>implement<sp/>functions<sp/>to<sp/>assign<sp/>values<sp/>to<sp/>the<sp/>AXI<sp/>ip<sp/>core<sp/>using<sp/>the<sp/>slave</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>registers<sp/>inside<sp/>the<sp/>core.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>denable<sp/>&lt;=<sp/>slv_reg0(0);</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>nshdn<sp/>&lt;=<sp/>slv_reg0(1);</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>dac_sel<sp/>&lt;=<sp/>slv_reg0(3)<sp/>&amp;<sp/>slv_reg0(2);</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>nRst<sp/>&lt;=<sp/>slv_reg0(4);</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>mux_cal_signal<sp/>&lt;=<sp/>slv_reg0(5);</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>ADC_nCS<sp/>&lt;=<sp/>slv_reg0(6);</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>SPI_mezz_sel<sp/>&lt;=<sp/>slv_reg0(9<sp/>downto<sp/>7);</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>SPI_WR_en<sp/>&lt;=<sp/>slv_reg0(10);</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>--<sp/>not<sp/>for<sp/>spi,<sp/>for<sp/>mux<sp/>sel<sp/>output</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>mezz_mux<sp/>&lt;=<sp/>slv_reg0(13<sp/>downto<sp/>11);</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">u32<sp/>write_CPLD_signals()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>ctrl_signal;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>ctrl_signal_comp;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>cpld_ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_SPI_wr_en<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ctrl_signal<sp/>=<sp/><sp/><sp/>(CPLD_mezz_mux<sp/>&lt;&lt;13)<sp/>|<sp/><sp/>(CPLD_SPI_wr_en<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>(CPLD_SPI_mezz_sel&lt;&lt;9)<sp/><sp/>|<sp/><sp/>(CPLD_ADC_nCS<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_mux0_1&lt;&lt;7)<sp/>|<sp/>(CPLD_mux0_0<sp/>&lt;&lt;6)<sp/>|<sp/>(CPLD_Tcal<sp/>&lt;&lt;5)|<sp/>(CPLD_nRst<sp/>&lt;&lt;4)<sp/>|<sp/>(CPLD_dac_sel1<sp/>&lt;&lt;3)<sp/>|(CPLD_dac_sel0<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_nshdn<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>CPLD_denable;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/><sp/><sp/>(CPLD_mezz_mux<sp/>&lt;&lt;15)<sp/>|<sp/><sp/>(CPLD_SPI_wr_en<sp/>&lt;&lt;<sp/>14)<sp/>|<sp/>(CPLD_SPI_mezz_sel&lt;&lt;11)<sp/>|<sp/>(CPLD_gain_mux&lt;&lt;9)<sp/>|<sp/><sp/>(CPLD_ADC_nCS<sp/>&lt;&lt;<sp/>8)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_mux0_1&lt;&lt;7)<sp/>|<sp/>(CPLD_mux0_0<sp/>&lt;&lt;6)<sp/>|<sp/>(CPLD_Tcal<sp/>&lt;&lt;5)|<sp/>(CPLD_nRst<sp/>&lt;&lt;4)<sp/>|<sp/>(CPLD_dac_sel1<sp/>&lt;&lt;3)<sp/>|(CPLD_dac_sel0<sp/>&lt;&lt;<sp/>2)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_nshdn<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>CPLD_denable;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>word:%x\n&quot;,ctrl_signal);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal_comp<sp/>=<sp/>ctrl_signal<sp/>&amp;<sp/>0x00000fff;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Xil_Out32(CPLD_ctrl_BaseAddr+0,ctrl_signal);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(20);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cpld_ans<sp/>=<sp/>read_cpld_word();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ctrl_signal_comp<sp/>!=<sp/>cpld_ans)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;Attempt:<sp/>%d\n<sp/>sent<sp/>:%x<sp/>-<sp/>rec:%x\n&quot;,i,ctrl_signal_comp<sp/>,cpld_ans);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//At<sp/>10<sp/>MHz<sp/>SPI<sp/>SCLK<sp/>sending<sp/>13<sp/>bit,<sp/>should<sp/>sent<sp/>the<sp/>word<sp/>in<sp/>1.6<sp/>us.<sp/>Then<sp/>CPLD<sp/>answer<sp/>back<sp/>10<sp/>bit<sp/>confirmation<sp/>in<sp/>1.2<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xil_Out32(CPLD_ctrl_BaseAddr+0,ctrl_signal);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(20);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpld_ans<sp/>=<sp/>read_cpld_word();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;100)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(i&gt;100)<sp/>xil_printf(&quot;cpld_spi_wr_en<sp/>1<sp/>FAILED!!!!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>xil_printf(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<sp/>cpld_spi_wr_en<sp/>1<sp/>SUCCESS!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>word<sp/>is<sp/>the<sp/>same<sp/>that<sp/>have<sp/>been<sp/>sent;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_SPI_wr_en<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ctrl_signal<sp/>=<sp/><sp/><sp/>(CPLD_mezz_mux<sp/>&lt;&lt;13)<sp/>|<sp/><sp/>(CPLD_SPI_wr_en<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>(CPLD_SPI_mezz_sel&lt;&lt;9)<sp/><sp/>|<sp/><sp/>(CPLD_ADC_nCS<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_mux0_1&lt;&lt;7)<sp/>|<sp/>(CPLD_mux0_0<sp/>&lt;&lt;6)<sp/>|<sp/>(CPLD_Tcal<sp/>&lt;&lt;5)|<sp/>(CPLD_nRst<sp/>&lt;&lt;4)<sp/>|<sp/>(CPLD_dac_sel1<sp/>&lt;&lt;3)<sp/>|(CPLD_dac_sel0<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_nshdn<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>CPLD_denable;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal<sp/>=<sp/><sp/><sp/>(CPLD_mezz_mux<sp/>&lt;&lt;15)<sp/>|<sp/><sp/>(CPLD_SPI_wr_en<sp/>&lt;&lt;<sp/>14)<sp/>|<sp/>(CPLD_SPI_mezz_sel&lt;&lt;11)<sp/>|<sp/>(CPLD_gain_mux&lt;&lt;9)<sp/>|<sp/><sp/>(CPLD_ADC_nCS<sp/>&lt;&lt;<sp/>8)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_mux0_1&lt;&lt;7)<sp/>|<sp/>(CPLD_mux0_0<sp/>&lt;&lt;6)<sp/>|<sp/>(CPLD_Tcal<sp/>&lt;&lt;5)|<sp/>(CPLD_nRst<sp/>&lt;&lt;4)<sp/>|<sp/>(CPLD_dac_sel1<sp/>&lt;&lt;3)<sp/>|(CPLD_dac_sel0<sp/>&lt;&lt;<sp/>2)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(CPLD_nshdn<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>CPLD_denable;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl_signal_comp<sp/>=<sp/>ctrl_signal<sp/>&amp;<sp/>0x00000fff;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>cpld_ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>word:%x\n&quot;,ctrl_signal);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Xil_Out32(CPLD_ctrl_BaseAddr+0,ctrl_signal);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(20);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>cpld_ans<sp/>=<sp/>read_cpld_word();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ctrl_signal_comp<sp/>!=<sp/>cpld_ans)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;Attempt:<sp/>%d\n<sp/>sent<sp/>:%x<sp/>-<sp/>rec:%x\n&quot;,i,ctrl_signal<sp/>&amp;<sp/>0x00000fff<sp/>,cpld_ans);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//At<sp/>10<sp/>MHz<sp/>SPI<sp/>SCLK<sp/>sending<sp/>13<sp/>bit,<sp/>should<sp/>sent<sp/>the<sp/>word<sp/>in<sp/>1.6<sp/>us.<sp/>Then<sp/>CPLD<sp/>answer<sp/>back<sp/>10<sp/>bit<sp/>confirmation<sp/>in<sp/>1.2<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xil_Out32(CPLD_ctrl_BaseAddr+0,ctrl_signal);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(20);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpld_ans<sp/>=<sp/>read_cpld_word();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;100)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(i&gt;100)<sp/>xil_printf(&quot;cpld_spi_wr_en<sp/>0<sp/>FAILED!!!!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>xil_printf(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<sp/>cpld_spi_wr_en<sp/>0<sp/>SUCCESS!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl_signal;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">u8<sp/>read_CPLD_status(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>cpld_wr_status;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>cpld_wr_status<sp/>=<sp/>Xil_In32(CPLD_ctrl_BaseAddr+4)<sp/>&amp;<sp/>0x00000001;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpld_wr_status;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>12<sp/>bit<sp/>word<sp/>from<sp/>cpld<sp/>module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">u16<sp/>read_cpld_word()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>cpld_word;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>cpld_word<sp/>=<sp/>(Xil_In32(CPLD_ctrl_BaseAddr+4)<sp/>&amp;<sp/>0x00001ffe)&gt;&gt;1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cpld_word<sp/>=<sp/>(Xil_In32(CPLD_ctrl_BaseAddr+4)<sp/>&amp;<sp/>0x00007ffe)&gt;&gt;1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpld_word;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>Initialization<sp/>rutine<sp/>for<sp/>mezzanines</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Mezz_CPLD_init(u8<sp/>mezz_sel){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>status;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>ack_cpld;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CPLD_mezz_mux<sp/>=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_SPI_mezz_sel<sp/>=<sp/>mezz_sel;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_ADC_nCS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_nRst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_dac_sel1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_dac_sel0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_mux0_0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_mux0_1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_Tcal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_nshdn<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_denable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Power<sp/>on<sp/>mezzanine;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>write_CPLD_signals();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>status:%d\n\n&quot;,<sp/>status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ack_cpld<sp/>=<sp/>read_cpld_word();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>ack:%d\n\n&quot;,<sp/>ack_cpld);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>10<sp/>ms;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(10000);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_nRst<sp/>=<sp/>0;</highlight><highlight class="comment">//???<sp/>already<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=write_CPLD_signals();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>status:%d\n\n&quot;,<sp/>status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ack_cpld<sp/>=<sp/>read_cpld_word();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>ack:%d\n\n&quot;,<sp/>ack_cpld);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>50<sp/>ns<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_ADC_nCS<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=write_CPLD_signals();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>status:%u\n\n&quot;,<sp/>status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ack_cpld<sp/>=<sp/>read_cpld_word();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>ack:%u\n\n&quot;,<sp/>ack_cpld);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_nRst<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//Habilito<sp/>chips.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=write_CPLD_signals();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_dac_sel1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_dac_sel0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=write_CPLD_signals();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xil_printf(&quot;CPLD<sp/>status:%d\n\n&quot;,<sp/>status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Aqui<sp/>inicializo<sp/>DACs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CPLD_mezz_power_off(u8<sp/>mezz_sel)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>status;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_mezz_mux<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_SPI_mezz_sel<sp/>=<sp/>mezz_sel;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_ADC_nCS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_nRst<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_dac_sel1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_dac_sel0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_mux0_0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_mux0_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_Tcal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_nshdn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>CPLD_denable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Power<sp/>on<sp/>mezzanine;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>write_CPLD_signals();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>xil_printf(</highlight><highlight class="stringliteral">&quot;Power<sp/>down<sp/>mezzanine<sp/>%x<sp/>\n\n&quot;</highlight><highlight class="normal">,mezz_sel);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(100);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="base_code/MB40ch_wUART/src/CPLD_driver.c"/>
  </compounddef>
</doxygen>
